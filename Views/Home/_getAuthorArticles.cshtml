@model IEnumerable<Devdiscourse.Models.BasicModels.DevNews>
@{
    string domainUrl = "https://www.devdiscourse.com";
}
@foreach (var item in Model)
{
    var newsImage = (item.ImageUrl ?? "").IndexOf("devdiscourse.blob.core.windows.net") != -1 ? "/remote.axd?" + item.ImageUrl : item.ImageUrl;
    <a href="@Url.RouteUrl("ArticleDetailswithprefix", new{prefix = item.NewsLabels??"agency-wire" ,id=item.GenerateSecondSlug()})" class="text-decoration">
        <div class="m-b-30 col-md-12">
            <div class="row">
                <div class="col-md-5 col-sm-4">
                    <div class="bg-gray cover-img lazy" data-src="@domainUrl@newsImage?width=295&height=160&mode=crop&format=jpeg"></div>
                </div>
                <div class="col-md-7 col-sm-8 p-l-0">
                    @if (item.Type == "Blog")
                    {
                        if (!string.IsNullOrEmpty(@item.SubType))
                        {
                            <span class="pull-right infocus-badge">@item.SubType</span>
                        }
                        else
                        {
                            <span class="pull-right infocus-badge">Blog</span>
                        }
                    }
                    @if (!string.IsNullOrEmpty(item.Country))
                    {
                        var countryArr = item.Country.Split(',');
                        foreach (var t in countryArr.Take(1))
                        {
                            <div class="text-uppercase country-sub">@t</div>
                        }
                    }
                    else
                    {
                        <div class="text-uppercase country-sub">Global</div>
                    }
                    <h3 class="title-sub">@item.Title</h3>
                    <h5 class="no-margin font-oswald fg-black">@item.TimeAgo()</h5>
                </div>
            </div>
        </div>
    </a>
}