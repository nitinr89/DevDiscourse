@using Devdiscourse.Models;
@using X.PagedList
@model IPagedList<Devdiscourse.Models.BasicModels.DiscourseTag>
@using X.PagedList.Mvc.Core
@{
    IPagedList<Devdiscourse.Models.BasicModels.DiscourseTag> model = Model;
}
@{
    ViewBag.Title = "Discourse Tag";
    Layout = "~/Views/Shared/_Layout _plain.cshtml";
}
<link href="~/Content/jquery.multiselect.css" rel="stylesheet" />
<link href="~/Content/PagedList.css" rel="stylesheet" />
<link href="~/Content/admin.css" rel="stylesheet" />

<div class="container bg-white m-t-10 m-b-10 p-b-10 p-t-10">
    <ol class="breadcrumb no-margin">
        <li class="breadcrumb-item"><a href="@Url.Action("Media", "Admin")">Admin</a></li>
        @if (ViewBag.id != null)
        {
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "DiscourseTag", new { id = ViewBag.id })">Discourse Tag</a></li>
        }
        else
        {
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "DiscourseTag")">Discourse Tag</a></li>
        }
        <li class="breadcrumb-item"><a href="@Url.Action("Create", "DiscourseTag")">Create</a></li>
    </ol>
</div>
<div class="container m-b-20 bg-white p-20">
    @using (Html.BeginForm("Index", "DiscourseTag", FormMethod.Get))
    {
        <div class="row m-b-20">
            <div class="col-md-2">
                <input type="text" placeholder="Search..." class="form-control" value="@ViewBag.CurrentFilter" name="search" id="search" />
            </div>
            <div class="col-md-2">
                <select class="form-control" name="sector" id="sector">
                    <option value="">--Select Sector--</option>
                    @await Component.InvokeAsync("SectorMenu", new { filter = "AdminPage" });
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    }
    <table class="table">
        <tr>
            <th>Title</th>
            <th>Sector</th>
            <th>CreatedOn</th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @item.DevSector.Title
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedOn)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
