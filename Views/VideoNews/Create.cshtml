@model Devdiscourse.Models.VideoNewsModels.VideoNews
@{
    ViewBag.Title = "Create Video News";
    Layout = "~/Views/Shared/_Layout _plain.cshtml";
}
<link href="~/Content/jquery.multiselect.css" rel="stylesheet" />
<link href="~/Content/admin.css" rel="stylesheet" />
<link href="~/Scripts/tagsInput/css/jquery.tagsinput.min.css" rel="stylesheet" />
<style>
    .ui-widget-header {
        background: #cedc98;
        border: 1px solid #DDDDDD;
        color: #333333;
        font-weight: bold;
    }

    .progress-label {
        position: absolute;
        left: 50%;
        top: 13px;
        font-weight: bold;
        text-shadow: 1px 1px 0 #fff;
    }

    .red {
        color: red;
    }

    .badge-success {
        background-color: #1c930e;
    }

    .list-group-item:hover {
        background-color: #efefef;
    }

    .addTag, .addFinalTag {
        font-size: 14px;
        min-width: 30px;
        text-align: center;
        border-radius: 0;
    }

    #imgtags_tagsinput {
        height: 80px !important;
        min-height: unset !important;
    }

    .actionButtons {
        display: block;
    }
</style>
<div class="container bg-white m-t-10 m-b-10 p-b-10 p-t-10">
    <ol class="breadcrumb no-margin">
        <li class="breadcrumb-item"><a href="@Url.Action("Media", "Admin")">Admin</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "VideoNews")">Video News</a></li>
        <li class="breadcrumb-item active">Create</li>
    </ol>
</div>
<div class="container no-padding m-b-10">
    @using (Html.BeginForm("Create", "VideoNews", FormMethod.Post, new { enctype = "multipart/form-data", id = "videoNewsForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="bg-white box-shadow m-t-40 p-b-10">
                <div class="label-tag">Content</div>
                <div class="p-20">
                    <div class="row m-t-20">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Title, new { htmlAttributes = new { @class = "form-control inputText" } })
                            <input id="headlineDisable" class="form-control" disabled />
                            <textarea id="headlineTextarea" class="form-control"></textarea>
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            <div id="title_character"></div>
                        </div>
                    </div>
                    <div class="row m-t-20">
                        @Html.LabelFor(model => model.AlternateHeadline, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AlternateHeadline, new { htmlAttributes = new { @class = "form-control inputText" } })
                            @Html.ValidationMessageFor(model => model.AlternateHeadline, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row m-t-20">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "height:120px;" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            <div id="wordCount">[ Words entered: 0 ]</div>
                        </div>
                    </div>
                    <div class="row m-t-20">
                        <div class="col-sm-6 col-xs-12">
                            <div class="row">
                                @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <input id="Source" name="Source" class="form-control" type="text" list="sourceList" />
                                    <datalist id="sourceList">
                                        <option value="Reuters" tabindex="(With inputs from Reuters)">Reuters</option>
                                        <option value="GOV.UK" tabindex="(With inputs from GOV.UK)">GOV.UK</option>
                                        <option value="PTI" tabindex="(This is a reproduced story from PTI as it is)">PTI</option>
                                        <option value="IRU" tabindex="">IRU</option>
                                        <option value="IANS" tabindex="(With inputs from IANS)">IANS</option>
                                        <option value="AfDB" tabindex="(With inputs from AfDB)">AfDB</option>
                                        <option value="ADB" tabindex="(With inputs from ADB)">ADB</option>
                                        <option value="IDB" tabindex="(With inputs from IDB)">IDB</option>
                                        <option value="IAEA" tabindex="(With inputs from IAEA)">IAEA</option>
                                        <option value="A2i" tabindex="(With inputs from A2i)">A2i</option>
                                        <option value="South Africa Government Press Release" tabindex="(With inputs from SAnews)">South Africa Government Press Release</option>
                                        <option value="US Government Press Release" tabindex="(With inputs from USDS)">US Government Press Release</option>
                                        <option value="UN" tabindex="(With inputs from UN)">UN</option>
                                        <option value="EIB" tabindex="(With inputs from EIB)">EIB</option>
                                        <option value="IMF" tabindex="(With inputs from IMF)">IMF</option>
                                        <option value="WHO" tabindex="(With inputs from WHO)">WHO</option>
                                        <option value="UNDP" tabindex="(With inputs from UNDP)">UNDP</option>
                                    </datalist>
                                    @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            <div class="row">
                                <label class="control-label col-md-4">City Name</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-6">
                    <div class="bg-white box-shadow m-t-40">
                        <div class="label-tag">Location</div>
                        <div class="p-20">
                            <div class="row m-t-10">
                                <div class="col-sm-6 col-xs-12">
                                    @Html.Label("VideoEdition", "Region", htmlAttributes: new { @class = "control-label" })
                                    <div id="RegionList" class="showListDiv"></div>
                                    <select id="VideoEdition" multiple>
                                        @foreach (var reg in @ViewBag.Region)
                                        {
                                            <option value="@reg.Id">@reg.Title</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-sm-6 col-xs-12">
                                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        <div id="CountryList" class="showListDiv"></div>
                                        <input type="text" class="form-control hidden" id="Country" name="Country" />
                                        <select class="form-control" id="Country_multi"></select>
                                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6">
                    <div class="bg-white box-shadow m-t-40 p-b-20">
                        <div class="label-tag">Sector/Label</div>
                        <div class="p-20">
                            <div class="row m-t-10">
                                <div class="col-sm-6 col-xs-12">
                                    @Html.Label("VideoSector", "Sector", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        <div id="SectorList" class="showListDiv"></div>
                                        <select id="VideoSector" multiple class="form-control">
                                            @foreach (var sector in ViewBag.Sector)
                                            {
                                                <option value="@sector.Id">@sector.Title</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-xs-12">
                                    @Html.LabelFor(model => model.Label, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.DropDownList("Label", null, "Select", htmlAttributes: new { @class = "form-control", @size = "26" })
                                        @Html.ValidationMessageFor(model => model.Label, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="col-sm-4 col-xs-12">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                            @Html.DropDownList("Category", null, htmlAttributes: new { @class = "form-control", @size = "26" })
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                            </div>
                            </div>*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-white box-shadow m-t-40 p-b-10">
                <div class="label-tag">Tags</div>
                <div class="p-20">
                    <div class="row m-t-20">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <button type="button" class="btn btn-primary btn-sm" style="display:none;margin-bottom:5px;" id="fetchTrendkeyword">Fetch Trend Keywords</button>
                            <ul class="list-group" id="trendKeyword"></ul>
                        </div>
                    </div>
                    <div class="row m-t-10">
                        <div class="col-md-2 text-right">
                            <label class="control-label">Type keywords</label>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group">
                                <textarea class="form-control" id="newKeyword" style="height:34px;resize:none"></textarea>
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" type="button" id="AddNewKeyword">Add Keyword</button>
                                </span>
                            </div>
                        </div>
                        <p class="text-danger"><small id="tagValidation"></small></p>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6 col-xs-12">
                    <div class="bg-white box-shadow m-t-40 p-b-10">
                        <div class="label-tag">Video</div>
                        <div class="p-20">
                            <div id="FileBrowse" class="row m-t-20">
                                <div class="col-xs-12 col-sm-12 col-md-6 m-b-20">
                                    <input type="file" class="form-control" accept="video/mp4,video/x-m4v,video/*" id="mediaFiles" />
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-6">
                                    <button type="button" class="btn btn-primary" id="VideoUrl">Upload</button>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.VideoUrl, "", new { @class = "text-danger" })
                            <div class="row m-t-20">
                                <div class="progress" id="fileUploadProgress" style="display:none">
                                    <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0%"><span>70%</span></div>
                                </div>
                            </div>
                            <div id="appendTo"></div>
                            <div class="table-responsive">
                                <table class="table" id="ListFiles">
                                    <thead>
                                        <tr><th>Title</th><th>Action</th></tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                            @Html.HiddenFor(model => model.MimeType)
                            @Html.HiddenFor(model => model.Size)
                            @Html.HiddenFor(model => model.Duration)
                            @Html.HiddenFor(model => model.VideoName)
                            @Html.HiddenFor(model => model.BlobName)
                            @Html.Hidden("AutoVideoThumbUrl")
                            @Html.HiddenFor(model => model.VideoUrl)
                            <div class="row m-t-20">
                                @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row m-t-20">
                                @Html.LabelFor(model => model.Copyright, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Copyright, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Copyright, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-sm-6 col-xs-12">
                    <div class="bg-white box-shadow m-t-40 p-b-10">
                        <div class="label-tag">Video Thumbnail</div>
                        <div class="p-20">
                            <div class="row m-t-20">
                                <div class="col-xs-12 col-sm-12 col-md-6 m-b-20">
                                    <div id="show-image-div"><div class="img-text">Thumbnail</div></div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-6">
                                    <div class="row p-t-10">
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.VideoThumbUrl, new { htmlAttributes = new { @class = "form-control", type = "file", @accept = "image/*" } })
                                            @Html.ValidationMessageFor(model => model.VideoThumbUrl, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 text-center m-t-10">
                                            <strong>OR</strong>
                                        </div>
                                        <div class="col-md-12 m-t-20">
                                            <input type="button" class="btn btn-primary btn-block" value="Choose image from gallery" id="selFromGallery" />
                                            <input type="text" class="form-control hidden" id="ChooseImage" name="ChooseImage" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-6 col-xs-12">
                    <div class="bg-white box-shadow m-t-40">
                        <div class="label-tag">Other Inputs</div>
                        <div class="p-20 p-t-40">
                            @Html.CheckBoxFor(model => model.EditorPick, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.EditorPick, htmlAttributes: new { @class = "control-label", @style = "margin-left:10px" })
                            @Html.ValidationMessageFor(model => model.EditorPick, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="m-t-20 m-b-30">
                <input type="submit" value="Create" class="btn btn-primary" id="SubmitBtn" style="padding:8px 30px; font-size:16px;" />
            </div>
        </div>
    }
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" style="z-index:700000">
    <div class="modal-dialog" role="document">
        <div class="modal-content modal-lg">
            <div class="modal-header">
                <span class="pull-right fa fa-times cursor-pointer p-10" id="closeBtn"></span>
                <h3 class="no-margin">Image Gallery</h3>
            </div>
            <div class="modal-body m-b-20" style="overflow:auto; height:700px;">
                <div class="p-b-20">
                    <div class="row p-b-10" style="border-bottom:1px solid #eee">
                        <div class="col-lg-12 col-md-12"><h4>Search Filters</h4></div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <input id="inputText" class="form-control" type="text" list="suggestList" />
                            <datalist id="suggestList">
                                <option value="Breaking">Breaking</option>
                            </datalist>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <select class="form-control" id="selSector">
                                <option value="0">All Sector</option>
                                @{
                                    @await Component.InvokeAsync("SectorMenu", new { filter = "AdminPage" });
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row m-t-10 p-b-10">
                        <div class="col-lg-12 col-md-12"><h4>Upload New Image</h4></div>
                        <div class="col-sm-6 col-xs-12">
                            <select class="form-control" id="imgSector">
                                <option value="0">Select Sector</option>
                                @{
                                    @await Component.InvokeAsync("SectorMenu", new { filter = "AdminPage" });
                                }
                            </select>
                        </div>
                        <div class="col-sm-6 col-xs-12">
                            <input type="file" class="form-control" id="uploadImage" />
                        </div>
                    </div>
                    <div class="row m-t-10 p-b-10">
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <input type="text" class="form-control img-text" placeholder="Enter image title" id="imageTitle" />
                        </div>
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <input type="text" class="form-control img-text" placeholder="Enter image copyright" id="imgcopyright" />
                        </div>
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <input type="text" class="form-control img-text" placeholder="Enter image caption" id="imgcaption" />
                        </div>
                    </div>
                    <div class="row m-t-10 p-b-10">
                        <div class="col-xs-12" id="showTags">
                            <input type="text" class="form-control img-text input-tags" id="imgtags" />
                        </div>
                    </div>
                    <div class="row m-t-10 p-b-10" style="border-bottom:1px solid #eee">
                        <div class="col-lg-2 col-md-2 col-sm-6 col-xs-12">
                            <button class="btn btn-sm btn-primary" id="saveImageBtn">Save</button>
                        </div>
                    </div>
                </div>
                <div id="savedImages"></div>
                <div class="text-center loadmore f-16" style="display:none;"><span class="fa fa-circle-o-notch fa-spin fa-fw"></span>Loading</div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="newModal" tabindex="-1" role="dialog" style="z-index:700000">
    <div class="modal-dialog" role="document">
        <div class="modal-content modal-lg">
            <div class="modal-header">
                <span class="pull-right fa fa-times cursor-pointer p-10" id="cancelBtn"></span>
                <h3 class="no-margin">Image Gallery</h3>
            </div>
            <div class="modal-body m-b-20" style="overflow:auto; height:700px;">
                <div class="p-b-20">
                    <div class="row p-b-10" style="border-bottom:1px solid #eee">
                        <div class="col-lg-12 col-md-12"><h4>Search Filters</h4></div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <input id="textInput" class="form-control" type="text" list="suggList" />
                            <datalist id="suggList">
                                <option value="Breaking">Breaking</option>
                            </datalist>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <select class="form-control" id="selSec">
                                <option value="0">All Sector</option>
                                @{
                                    @await Component.InvokeAsync("SectorMenu", new { filter = "AdminPage" });
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div id="imageList"></div>
                <div class="text-center loadmore f-16" style="display:none;"><span class="fa fa-circle-o-notch fa-spin fa-fw"></span>Loading</div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="mydialog" tabindex="-1" role="dialog" style="z-index:700000">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <span class="pull-right fa fa-times cursor-pointer p-10" id="canceldialog"></span>
                <h3 class="no-margin">Search News</h3>
            </div>
            <div class="modal-body m-b-20" style="overflow:auto;">
                <div class="p-b-20">
                    <div class="row p-b-10" style="border-bottom:1px solid #eee">
                        <div class="col-xs-12"><h4>Search</h4></div>
                        <div class="col-xs-12">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search" id="newstxt" />
                                <div class="input-group-btn">
                                    <button class="btn btn-primary" id="newstxtbtn" type="button">
                                        <span class="glyphicon glyphicon-search"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="newsList"></div>
                <div class="text-center searching f-16" style="display:none;"><span class="fa fa-circle-o-notch fa-spin fa-fw"></span>Search...</div>
            </div>
            <div class="modal-footer" style="display:none;">
                <button class="btn btn-primary" id="addNews">Save</button>
            </div>
        </div>
    </div>
</div>
<video id="vid" style="display:none" controls></video>
@section Scripts {
    <script src="~/Scripts/jquery.multiselect.js"></script>
    <script src="~/Scripts/tagsInput/js/jquery-tagsinput1.3.6jquery.tagsinput.min.js"></script>
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        $(document).ready(function () {
            var _region = "Global Edition";
            var _skip = 0;
            var _sector = "";
            var _title = "";
            var _imgTitle = "";
            var _imgUrl = "";
            var _imgSector = "0";
            var _imgCaption = "";
            var _imgCopyright = "";
            var _mimetype = "";
            var _filesize = "";
            var _imgTags = "";
            var _videoUrl = "";
            var _fromOldGallery = false;
            var FinalTag = [];
            var imageFor = "news";
            $('.input-tags').tagsInput();

            $("#headlineTextarea").on('input', function () {
                $('#Title').val($(this).val());
                $("#headlineDisable").val($(this).val());
                $("#title_character").html('Character  Count: ' + $(this).val().length);
            });
            $("#SourceUrl").on('input', function () {
                $('#SubmitBtn').show();
                $('span[data-valmsg-for="SourceUrl"]').html('');
                var cityValue = $(this).val();
                if (cityValue.indexOf(',') != -1) {
                    $('span[data-valmsg-for="SourceUrl"]').html('Single city is allowed');
                    $('#SubmitBtn').hide();
                }
            });
            getCountries();
            function getCountries() {
                $.ajax({
                    url: '/Home/GetCountry',
                    type: 'Post',
                    data: { region: _region },
                    dataType: 'Json',
                    success: function (data) {
                        $('#Country_multi').replaceWith('<select class="form-control" id="Country_multi" size="27"></select>');
                        $.each(data, function (i, item) {
                            $('#Country_multi').append('<option value="' + item.title + '">' + item.title + '</option>');
                        });
                        $('#Country_multi').change(function () {
                            $("#Country").val($(this).val());
                        });
                    },
                    error: function () {
                    },
                });
            }
            tinymce.init({
                selector: '#Description',
                height: 300,
                menubar: false,
                relative_urls: false,
                remove_script_host: false,
                invalid_elements: 'br',
                //entity_encoding: 'raw',
                convert_urls: true,
                default_link_target: '_blank',
                rel_list: [
                    { title: 'Do Follow', value: '' },
                    { title: 'No Follow', value: 'nofollow' },
                    { title: 'No Follow/Referer/Opener', value: 'nofollow noopener noreferrer' }
                ],
                plugins: [
                    'advlist autolink lists link image charmap print preview anchor',
                    'searchreplace visualblocks code fullscreen wordcount',
                    'insertdatetime media table contextmenu paste textcolor colorpicker imagetools'
                ],
                setup: function (ed) {
                    ed.on('init', function () {
                        this.getDoc().body.style.fontFamily = 'sans-serif';
                    });
                    ed.on('keyup', function (evt) {
                        var theEditor = tinymce.activeEditor;
                        var wordCount = theEditor.plugins.wordcount.getCount();
                        $("#wordCount").html("[ Words entered: " + wordCount + " ]");
                    });
                    ed.addButton('mybutton', {
                        text: '✓',
                        title: "Strip html",
                        icon: false,
                        onclick: function () {
                            ed.setContent($(ed.getContent()).text());
                        }
                    });
                    ed.addButton('ecButton', {
                        text: 'EC',
                        title: "Embed Code",
                        icon: false,
                        onclick: function () {
                            ed.windowManager.open({
                                title: 'Embed Code',
                                width: 300,
                                height: 90,
                                body: [
                                    { type: 'textbox', name: 'code', multiline: true, label: '' }
                                ],
                                onsubmit: function (e) {
                                    ed.execCommand('mceInsertContent', false, e.data.code + '<p></p>');
                                }
                            });
                        }
                    });
                    ed.addButton('highLightBtn', {
                        text: 'H',
                        title: "Highlight",
                        icon: false,
                        onclick: function () {
                            ed.execCommand('mceInsertContent', false, '<div class="bg-highlight highlight-containter p-20"><div><div class="top-line"></div><h3>HIGHLIGHT</h3><ul><li>bullet point here... </li></ul><div class="bottom-line"></div></div></div><p></p>');
                        }
                    });
                    ed.addButton('BlockquoteBtn', {
                        text: 'B',
                        title: "Blockquote",
                        icon: false,
                        onclick: function () {
                            ed.execCommand('mceInsertContent', false, '<blockquote class="blockquote"><h3>Quote here</h3> <footer>Source Title</footer> </blockquote><p></p>');
                        }
                    });
                    ed.addButton('searchButton', {
                        text: 'Search',
                        title: "Search News",
                        icon: false,
                        onclick: function () {
                            $('#mydialog').modal('show');
                            $('#newstxtbtn').click(function () {
                                $('.searching').show();
                                $('#newsList').html("");
                                var _searchText = $('#newstxt').val();
                                $.ajax({
                                    url: `/api/GetSearchedNews/${_searchText}`,
                                    type: 'Get',
                                    dataType: 'Json',
                                    success: function (data) {
                                        $('.searching').hide();
                                        $('.modal-footer').show();
                                        $.each(data, function (i, item) {
                                            $('#newsList').append('<div class="news-div searchNews" id="' + item.newsId + '" tabindex="' + item.title + '" value="' + item.label + '">' + item.title + '</div>');
                                        });
                                    },
                                    error: function (req, status, error) {
                                        console.log(req.responseText);
                                    },
                                });
                            });
                            $(document).on('click', '.searchNews', function () {
                                $(document).find('.searchNews').removeClass('select-News');
                                $(this).addClass('select-News');
                            });
                            $('#addNews').click(function () {
                                var _title = $('.select-News').attr('tabindex');
                                var _newsId = $('.select-News').attr('id');
                                var _prefix = $('.select-News').attr('value') != "" ? $('.select-News').attr('value') : "agency-wire";
                                var resultHtml = `<p>Also Read: <a href="/article/${_prefix}/${convertToSlug(_newsId, _title)}" target="_blank">${_title}</a></p>`;
                                $('#mydialog').modal('hide');
                                ed.execCommand('mceInsertContent', false, resultHtml);
                                $('#newsList').html("");
                                $('#newstxt').val("");
                                $(document).find('.searchNews').removeClass('select-News');
                            });
                        }
                    });
                },
                toolbar: 'undo redo | styleselect | table charmap | forecolor backcolor | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | removeformat pastetext | code | print | mybutton ecButton searchButton highLightBtn BlockquoteBtn',
                imagetools_cors_hosts: ['www.tinymce.com', 'http://localhost:61834']
            });
            $('#canceldialog').click(function () {
                $('#mydialog').modal('hide');
            });
            function convertToSlug(newsId, str) {
                str = str.replace(/^\s+|\s+$/g, '');
                str = str.toLowerCase();
                var from = "àáäâèéëêìíïîòóöôùúüûñç·/_,:;";
                var to = "aaaaeeeeiiiioooouuuunc------";
                for (var i = 0, l = from.length; i < l; i++) {
                    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));
                }
                str = str.replace(/[^a-z0-9 -]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-');
                return newsId + "-" + str;
            }

            $("#AddNewKeyword").click(function () {
                $("#tagValidation").html('')
                var tagValueArr = $("#newKeyword").val().split(',');
                for (var i = 0; i < tagValueArr.length; i++) {
                    var tagValue = tagValueArr[i];
                    if (tagValue.trim() == "") {
                        $("#tagValidation").html('Please add a valid tag.');
                    } else if (FinalTag.indexOf(tagValue) != -1) {
                        $("#tagValidation").html('Tag already exist.');
                    } else {
                        FinalTag.push(tagValue);
                        $("#newKeyword").val('');
                        $('#trendKeyword').append(`<li class="list-group-item deleteFinalTag" data-title="${tagValue}" style="padding:0 10px;">${tagValue}<input type="hidden" name="Tags" value="${tagValue}"></li>`)
                    }
                }
                $('#Tags').val(FinalTag.join(','));
            });
            $(document).on('click', '.deleteFinalTag', function () {
                var deletedItem = $(this).attr('data-title');
                FinalTag = FinalTag.filter(item => item != deletedItem);
                $(this).css({ 'text-decoration': 'line-through' });
                $(this).children("input").remove('');
                $(this).append('<span class="badge badge-success float-right addFinalTag" data-title="' + deletedItem + '" style="padding-top:0px;cursor:pointer;margin-top:2px;">+</span>');
                $(this).removeClass('deleteFinalTag');
            });
            $(document).on('click', '.addFinalTag', function () {
                var addItem = $(this).attr('data-title');
                FinalTag.push(addItem);
                $(this).parent().css({ 'text-decoration': 'none' });
                $(this).parent().addClass('deleteFinalTag');
                $(this).parent().append(`<input name="Tags" type="hidden" value="${addItem}">`);
                $(this).remove();
            });
            // For Multiple Select
            $('#VideoSector').multiselect();
            $('#VideoEdition').multiselect();
            //$('#Category_multi').multiselect();
            // For Sector
            $('input[name="VideoSector[]"]').on("change", function () {
                var valueArray = [];
                var textArray = [];
                $("input[name='VideoSector[]']:checked").each(function () {
                    valueArray.push($(this).val().toString());
                    textArray.push($('label[for="' + this.id + '"]').text());
                });
                $("#Sector").val(valueArray);
                $("#SectorList").html(textArray.join(", "));
            });

            // For Category
            //$('input[name="Category_multi[]"]').on("change", function () {
            //    var valueArray = [];
            //    var textArray = [];
            //    $("input[name='Category_multi[]']:checked").each(function () {
            //        valueArray.push($(this).val().toString());
            //        textArray.push($('label[for="' + this.id + '"]').text());
            //    });
            //    $("#Category").val(valueArray);
            //    $("#CategoryList").html(textArray.join(", "));
            //});

            // For Region
            $('input[name="VideoEdition[]"]').on("change", function () {
                var valueArray = [];
                var regionIdArray = [];
                $("input[name='VideoEdition[]']:checked").each(function () {
                    valueArray.push($('label[for="' + this.id + '"]').text());
                    regionIdArray.push($(this).val());
                });
                $("#Region").val(valueArray);
                $("#RegionList").html(valueArray.join(", "));
                _region = valueArray.toString();
                if (_region == "") {
                    _region = "Global Edition";
                    $("#Country").val("");
                    $("#CountryList").html("");
                }
                getCountries();
            });
            // Saved Image Gallery
            $(document).on('click', '.mce-filepicker', function () {
                if ($("label[for=" + $(this).attr("id") + "]").text() == "Source") {
                    imageFor = "news";
                    _skip = 0;
                    $('#myModal').modal();
                    $('.loadmore').show();
                    $.ajax("/Home/GetSavedImages?skip=" + _skip).done(function (data) { $('#savedImages').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
            });
            $('#closeBtn').click(function () {
                $('#myModal').modal('hide');
            });
            $(document).on("click", ".load_MorePics", function () {
                $(this).remove();
                $('.loadmore').show();
                _skip = _skip + 20;
                $.ajax("/Home/GetSavedImages?skip=" + _skip + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#savedImages').append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
            });

            // Upload image into gallery
            $('#selSector').change(function () {
                _sector = $('#selSector').val();
                $.ajax("/Home/GetSavedImages?sector=" + _sector + "&title=" + _title).done(function (data) { $('#savedImages').html("").append(data); $('.lazy').lazy(); });
            });
            $('#textBtn').click(function () {
                _title = $('#inputText').val();
                $.ajax("/Home/GetSavedImages?sector=" + _sector + "&title=" + _title).done(function (data) { $('#savedImages').html("").append(data); $('.lazy').lazy(); });
            });
            $("#inputText").keydown(function (e) {
                if (e.keyCode == 13) {
                    _title = $('#inputText').val();
                    $.ajax("/Home/GetSavedImages?sector=" + _sector + "&title=" + _title).done(function (data) { $('#savedImages').html("").append(data); $('.lazy').lazy(); });
                }
            });
            $(document).on('change', '#inputText', function () {
                _title = $(this).val();
                $.ajax("/Home/GetSavedImages?sector=" + _sector + "&title=" + _title).done(function (data) { $('#savedImages').html("").append(data); $('.lazy').lazy(); });
            });
            $('#VideoThumbUrl').change(function () {
                // Checking whether FormData is available in browser
                if (window.FormData !== undefined) {
                    var _url = URL.createObjectURL(event.target.files[0]);
                    $('#show-image-div').html('<img src=' + _url + ' class="img-responsive" style="max-width:200px" />');
                    $('#ChooseImage').val('');
                }
            });
            $('#uploadImage').change(function () {
                // Checking whether FormData is available in browser
                if (window.FormData !== undefined) {
                    var fileUpload = $("#uploadImage").get(0);
                    var files = fileUpload.files;
                    // Create FormData object
                    var fileData = new FormData();
                    if (files[0].size > parseInt(4048576)) {
                        //show an alert to the user
                        alert("File size must be less than 4MB", "danger");
                    }
                    else {
                        // Looping over all files and add it to FormData object
                        for (var i = 0; i < files.length; i++) {
                            fileData.append(files[i].name, files[i]);
                        }
                        $.ajax({
                            url: '/UserFiles/UploadFile',
                            type: "POST",
                            contentType: false, // Not to set any content header
                            processData: false, // Not to process data
                            data: fileData,
                            success: function (result) {
                                if (result == "Error") {
                                    showAlert('Something went wrong!', "danger")
                                } else {
                                    var data = JSON.parse(result);
                                    _imgUrl = data.FileUrl;
                                    _mimetype = data.MimeType;
                                    _filesize = data.FileSize;
                                    $('#imageTitle').val(data.FileName);
                                    $('#imgcaption').val(data.Caption);
                                    $('#showTags').html('<input type="text" id="imgtags" class="form-control input-tags" value="' + data.Tags + '" />');
                                    $('.input-tags').tagsInput();
                                }
                            },
                            error: function (err) {
                                showAlert('Something went wrong!', "danger")
                            }
                        });
                    }
                }
                else {
                    alert("FormData is not supported.");
                }
            });
            $("#mediaFiles").change(function () {
                var fileUpload = $("#mediaFiles").get(0);
                var files = fileUpload.files;
                var objectUrl = URL.createObjectURL(files[0]);
                $("#vid").prop("src", objectUrl);
            });
            $('#VideoUrl').click(function () {
                // Checking whether FormData is available in browser
                if (window.FormData !== undefined) {
                    var fileUpload = $("#mediaFiles").get(0);
                    var files = fileUpload.files;
                    // Create FormData object
                    var fileData = new FormData();
                    if (files[0].size > parseInt(1073741824)) {
                        alert("File size must be less than 1GB", "danger");
                    }
                    else {
                        for (var i = 0; i < files.length; i++) {
                            fileData.append(files[i].name, files[i]);
                        }
                        $.ajax({
                            url: '/api/MediaStream/UploadVideo',
                            type: "POST",
                            contentType: false, // Not to set any content header
                            processData: false, // Not to process data
                            data: fileData,
                            xhr: function () {
                                var myXhr = $.ajaxSettings.xhr();
                                if (myXhr.upload) {
                                    myXhr.upload.addEventListener('progress', progress, false);
                                }
                                return myXhr;
                            },
                            success: function (result) {
                                if (result == "Error") {
                                    showAlert('Something went wrong!', "danger")
                                } else {
                                    var videoDuration = $("#vid")[0].duration;
                                    var data = JSON.parse(result);
                                    $('#fileUploadProgress').hide();
                                    //$('#appendTo').append('<div id="' + data.FileName + '"><input type="hidden" name="FileTitle" value="' + data.FileName + '"/><input type="hidden" name="FilePath" value="' + data.FileUrl + '"/><input type="hidden" name="MimeType" value="' + data.MimeType + '"/><input type="hidden" name="FileSize" value="' + data.FileSize + '"/><input type="hidden" name="FileCaption" value="' + data.Caption + '"/><input type="hidden" name="FileThumbUrl" value="' + data.FileThumbUrl + '"/><input type="hidden" name="FileDuration" value="' + fileDurationFormat(videoDuration.toString()) + '"/></div>');
                                    var tableData = '<tr><td>' + data.FileName + '</td><td><button type="button" class="removeVideoMedia btn btn-xs btn-danger" data-id="' + data.FileName + '"><span class="glyphicon glyphicon-remove"></span></button></td></tr>';
                                    $("#ListFiles tbody").html(tableData);

                                    $("#MimeType").val(data.MimeType);
                                    $("#Size").val(data.FileSize);
                                    $("#Duration").val(fileDurationFormat(videoDuration.toString()));
                                    $("#VideoName").val(data.FileName);
                                    $("#BlobName").val(data.Caption);
                                    $("#AutoVideoThumbUrl").val(data.FileThumbUrl);
                                    $("#VideoUrl ").val(data.FileUrl);
                                    $('#show-image-div').html('<img src="' + data.FileThumbUrl + '" class="img-responsive">')

                                    $('#mediaFiles').val('');
                                }
                            },
                            error: function (err) {
                                console.log(err);
                                //showAlert('Something went wrong!', "danger")
                            }
                        });
                        function progress(e) {
                            if (e.lengthComputable) {
                                var max = e.total;
                                var current = e.loaded;
                                var percentage = parseInt((current * 100) / max);
                                $('#fileUploadProgress').show();
                                $('#fileUploadProgress .progress-bar').html('<span>' + percentage + '%</span>').css({ width: percentage + '%' })
                                if (percentage >= 100) {
                                    $('#fileUploadProgress .progress-bar').html('<span>Processing video please wait..</span>').css({ width: '100%' });
                                }
                            }
                        }
                    }
                }
                else {
                    alert("FormData is not supported.");
                }
            });
            function fileDurationFormat(duration) {
                var sec_num = parseInt(duration, 10);
                var hours = Math.floor(sec_num / 3600);
                var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
                var seconds = sec_num - (hours * 3600) - (minutes * 60);
                if (hours == 0) {
                    hours = "";
                } else if (hours < 10) { hours = "0" + hours + ':'; }
                if (minutes < 10) { minutes = "0" + minutes; }
                if (seconds < 10) { seconds = "0" + seconds; }
                return hours + minutes + ':' + seconds;
            }
            $(document).on('click', '.removeVideoMedia', function () {
                $("#" + $(this).attr('data-id')).remove();
                $(this).parent().parent().remove();
            });
            $('#saveImageBtn').click(function () {
                _imgTitle = $('#imageTitle').val();
                _imgSector = $('#imgSector option:selected').val();
                _imgCaption = $('#imgcaption').val();
                _imgCopyright = $('#imgcopyright').val();
                _imgTags = $('#imgtags').val();
                if (_imgUrl == "") {
                    alert("Please upload image");
                }
                else {
                    saveImage();
                }
            });
            function saveImage() {
                $.ajax({
                    url: '/UserFiles/SaveGalleryImage',
                    type: 'Post',
                    data: { title: _imgTitle, url: _imgUrl, sector: _imgSector, caption: _imgCaption, copyright: _imgCopyright, tags: _imgTags, mimetype: _mimetype, filesize: _filesize },
                    dataType: 'Json',
                    success: function (data) {
                        $.ajax("/Home/GetSavedImages?sector=" + _sector + "&title=" + _title).done(function (data) { $('#savedImages').html("").append(data); $('.lazy').lazy(); });
                        $('.img-text').val("");
                        $("#uploadImage").val("");
                    },
                    error: function () {
                    },
                });
            }

            // Image From Gallery
            var _skipCount = 0;
            $('#selFromGallery').click(function () {
                imageFor = "news_cover";
                _skipCount = 0;
                _fromOldGallery = false;
                $('#newModal').modal();
                $('.loadmore').show();
                $('#textInput').val("");
                $.ajax("/Home/GetSavedImages?skip=" + _skipCount).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
            });
            $('#selFromPrevGallery').click(function () {
                _skipCount = 0;
                _fromOldGallery = true;
                $('#newModal').modal();
                $('.loadmore').show();
                $('#textInput').val("");
                $.ajax("/Home/GetOldSavedImages?skip=" + _skipCount).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
            });
            $('#cancelBtn').click(function () {
                $('#newModal').modal('hide');
            });
            $(document).on("click", ".load-more", function () {
                $(this).remove();
                $('.loadmore').show();
                _skipCount = _skipCount + 20;
                if (_fromOldGallery == true) {
                    $.ajax("/Home/GetOldSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
                else {
                    $.ajax("/Home/GetSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
            });
            $(document).on('click', '.selectedImage', function () {
                if (imageFor == "news") {
                    var _imageUrl = $(this).attr("id");
                    $('#myModal').modal('hide');
                    $(document).find('.mce-filepicker .mce-textbox').val(_imageUrl);
                } else if (imageFor == "news_cover") {
                    var _iurl = $(this).attr("id");
                    $('#newModal').modal('hide');
                    $('#AutoVideoThumbUrl').val(_iurl);
                    $('#show-image-div').html('<img src=' + _iurl + ' class="img-responsive" />');
                }
            });
            $('#selSec').change(function () {
                _sector = $('#selSec').val();
                if (_fromOldGallery == true) {
                    $.ajax("/Home/GetOldSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
                else {
                    $.ajax("/Home/GetSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
            });
            $('#searchClick').click(function () {
                _title = $('#textInput').val();
                if (_fromOldGallery == true) {
                    $.ajax("/Home/GetOldSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
                else {
                    $.ajax("/Home/GetSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
            });
            $("#textInput").keydown(function (e) {
                if (e.keyCode == 13) {
                    _title = $('#textInput').val();
                    _skipCount = 0;
                    if (_fromOldGallery == true) {
                        $.ajax("/Home/GetOldSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                    }
                    else {
                        $.ajax("/Home/GetSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                    }
                }
            });
            $(document).on('change', '#textInput', function () {
                _title = $(this).val();
                if (_fromOldGallery == true) {
                    $.ajax("/Home/GetOldSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
                else {
                    $.ajax("/Home/GetSavedImages?skip=" + _skipCount + "&sector=" + _sector + "&title=" + _title).done(function (data) { $('#imageList').html("").append(data); $('.lazy').lazy(); $('.loadmore').hide(); });
                }
            });
        });
    </script>
}
