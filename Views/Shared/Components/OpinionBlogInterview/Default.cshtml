@model List<Devdiscourse.Models.ViewModel.NewsViewModel>
@using System.Text.RegularExpressions;

@functions {
    public async Task Truncate(string input, int length)
    {
        if (string.IsNullOrEmpty(input))
        {
            <text>...</text>
        }
        else if (input.Length <= length)
        {
            @input
        }
        else
        {
            @input.Substring(0, length)
        }
    }
}
@functions {
    public async Task GetDescriptionText(string htmltext)
    {
        const string tagWhiteSpace = @"(>|$)(\W|\n|\r)+<";
        const string stripFormatting = @"<[^>
    ]*(>|$)";
        const string lineBreak = @"<(br|BR)\s{0,1}\/{0,1}>";
        var lineBreakRegex = new Regex(lineBreak, RegexOptions.Multiline);
        var stripFormattingRegex = new Regex(stripFormatting, RegexOptions.Multiline);
        var tagWhiteSpaceRegex = new Regex(tagWhiteSpace, RegexOptions.Multiline);
        var text = (htmltext ?? "").Replace("&nbsp;", " ");
        text = Regex.Replace(text, @"\r\n?|\n", " ");
        text = System.Net.WebUtility.HtmlDecode(text);
        text = tagWhiteSpaceRegex.Replace(text, "><");
        text = lineBreakRegex.Replace(text, Environment.NewLine);
        text = stripFormattingRegex.Replace(text, string.Empty);
        text = Regex.Replace(text, @"[^,.A-Za-z0-9\s-]", "");
        @text
        ;
    }
}

    @foreach (var item in Model)
{
    var newsImage = "";
    if (!string.IsNullOrEmpty(item.ImageUrl) && item.ImageUrl != "/images/defaultImage.jpg" && item.ImageUrl != "/images/newstheme.jpg" && item.ImageUrl != "/images/sector/all_sectors.jpg")
    {
        newsImage = $"/Experiment/Img?imageUrl={item.ImageUrl}";
    }
    <a href="@Url.RouteUrl("ArticleDetailswithprefix",new { prefix=item.Label??"agency-wire" ,id=item.GenerateSecondSlug()})" class="text-decoration">
        @*<div class="row m-b-20">
    <div class="col-md-3 col-sm-5">
    <div class="trend-img lazy lazyload" data-src="@newsImage&width=640&height=480&mode=crop"></div>
    </div>
    <div class="col-md-9 col-sm-7 list-padding">
    <h3 class="fg-black no-margin l-h">@item.Title</h3>
    <p class="m-t-5 text-muted">@Truncate(@GetDescriptionText(@item.Subtitle).ToString(), 240)...</p>
    </div>
    </div>*@
        <div class="row m-b-20">
            <div class="col-md-12 col-sm-5">
                <div class="trend-img lazy lazyload" data-src="@newsImage&width=320&height=240&mode=crop"></div>
            </div>
            <div class="col-md-12 col-sm-7">
                <h4 class="fg-black no-margin f-18 l-h">@item.Title</h4>
            </div>
        </div>
    </a>
}
