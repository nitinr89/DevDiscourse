@model IEnumerable<Devdiscourse.Models.ViewModel.LiveblogViewModel>
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "_getLiveBlogsamp";
    string domainUrl = "https://www.devdiscourse.com";
    var regex = new Regex(@"twitter\.com\/.*\/status(?:es)?\/([^\/\?]+)", RegexOptions.IgnoreCase);

}
@foreach (var item in Model)
{
    var match = regex.Match(@item.Description);
    string data = match.Groups[1].Value;
    int count = 1;
    var datadescription = Regex.Replace(@item.Description, "<blockquote(.|\n)*?</blockquote>", m => "<amp-twitter width=\"375\" height=\"472\" layout=\"responsive\" data-tweetid=\"" + match.Groups[count++].Value + "\"></amp-twitter>").Trim();
    //datadescription = Regex.Replace(datadescription, " style=[^>]*", "");
    datadescription = Regex.Replace(datadescription, "<img", "<amp-img layout='responsive'");
    datadescription = Regex.Replace(datadescription, "<iframe", "<amp-iframe layout='responsive' sandbox=\"allow-scripts allow-same-origin\"");
    datadescription = Regex.Replace(datadescription, "width=\"100%\"", "width=\"640\"");
    datadescription = Regex.Replace(datadescription, "height=\"100%\"", "height=\"480\"");
    <div id="#post_@item.Id" data-sort-time="20180728183955" class="live-blog">
        <div class="card blog">
            <h4>@item.Title</h4>
            @if (!String.IsNullOrEmpty(@item.ImageUrl) && item.ImageUrl != "/images/defaultImage.jpg")
            {
                var newsImageUrl = $"/Experiment/Img?imageUrl={item.ImageUrl}";
                <amp-img src="@domainUrl@newsImageUrl&width=640"
                         layout="responsive"
                         width="640"
                         height="480">
                </amp-img>
            }
            <div>@Html.Raw(@datadescription)</div>
        </div>
    </div>
}

