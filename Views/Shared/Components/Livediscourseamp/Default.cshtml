@model IEnumerable<Devdiscourse.Models.ViewModel.LiveblogViewModel>
@using System.Text.RegularExpressions;
@using AngleSharp.Network.Default
@using Html2Amp;
@using Html2Amp.Sanitization;
@using Html2Amp.Sanitization.Implementation;
@using Devdiscourse.Hubs;
@{
    ViewBag.Title = "_getLiveBlogsamp";
    string domainUrl = "https://www.devdiscourse.com";
    var regex = new Regex(@"twitter\.com\/.*\/status(?:es)?\/([^\/\?]+)", RegexOptions.IgnoreCase);
    var converter = new HtmlToAmpConverter();
    converter.WithSanitizers(
        new HashSet<ISanitizer>
                {
            new InstagramSanitizer(),
            new TwitterSanitizer(),
            new AudioSanitizer(),
            new HrefJavaScriptSanitizer(),
            new ImageSanitizer(),
            new JavaScriptRelatedAttributeSanitizer(),
            new StyleAttributeSanitizer(),
            new ScriptElementSanitizer(),
            new TargetAttributeSanitizer(),
            new XmlAttributeSanitizer(),
            new YouTubeVideoSanitizer(),
            new AmpIFrameSanitizer()
                });
}
@foreach (var item in Model)
{
    var match = regex.Match(@item.Description ?? "");
    string data = match.Groups[1].Value;
    int count = 1;
    var datadescription = Regex.Replace(@item.Description ?? "", "<blockquote(.|\n)*?</blockquote>", m => "<amp-twitter width=\"375\" height=\"472\" layout=\"responsive\" data-tweetid=\"" + match.Groups[count++].Value + "\"></amp-twitter>").Trim();
    //datadescription = Regex.Replace(datadescription, " style=[^>]*", "");
    datadescription = Regex.Replace(datadescription, "<img", "<amp-img layout='responsive'");
    datadescription = Regex.Replace(datadescription, "<iframe", "<amp-iframe layout='responsive' sandbox=\"allow-scripts allow-same-origin\"");
    datadescription = Regex.Replace(datadescription, "width=\"100%\"", "width=\"640\"");
    datadescription = Regex.Replace(datadescription, "height=\"100%\"", "height=\"480\"");
    <div id="#post_@item.Id" data-sort-time="20180728183955" class="live-blog">
        <div class="card discourse content-padding">
            <div class="time">@item.CreatedOn.ToString()</div>
            <h4>@item.Title</h4>
            @if (!String.IsNullOrEmpty(@item.ImageUrl) && item.ImageUrl != "/images/sector/all_sectors.jpg")
            {
                var newsImageUrl = item.ImageUrl.IndexOf("devdiscourse.blob.core.windows.net") != -1 ? "/remote.axd?" + item.ImageUrl : item.ImageUrl;
                <amp-img src="@domainUrl@newsImageUrl?width=640"
                         layout="responsive"
                         width="640"
                         height="400">
                </amp-img>
                <p class="img-caption">@item.ImageCopyright</p>
            }
            @{
                var ampHtml = "";
                if (!string.IsNullOrEmpty(item.Description))
                {
                    ampHtml = converter.ConvertFromHtml(item.Description).AmpHtml;
                }
            }
            <div class="description">@Html.Raw(@ampHtml)</div>
            @{
                var itemUrl = $"{Context.Request.Scheme}://{Context.Request.Host}/Livediscourse/Article/post#{item.Id}";
            }
            <div class="">
                <amp-social-share type="twitter" class="share-btn" width="32" height="32" data-param-url="@itemUrl" data-param-text="@item.Title" aria-label="Share on twitter"></amp-social-share>
                <amp-social-share type="facebook" width="32" height="32" data-param-app_id="1962446954071172" data-param-href="@itemUrl" data-attribution="1962446954071172" aria-label="Share on facebook"></amp-social-share>
                <amp-social-share type="linkedin" width="32" height="32" aria-label="Share on linkedin" data-param-url="@itemUrl"></amp-social-share>
                <amp-social-share type="whatsapp" width="32" height="32" aria-label="Share on whatsapp" data-param-text="@itemUrl"></amp-social-share>
            </div>
        </div>
    </div>
}

