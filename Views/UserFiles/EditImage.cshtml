@model Devdiscourse.Models.BasicModels.ImageGallery

@{
    ViewBag.Title = "EditImage";
}

<link href="~/Content/jquery.multiselect.css" rel="stylesheet" />
<link href="~/Content/admin.css" rel="stylesheet" />
<link href="~/Scripts/tagsInput/css/jquery.tagsinput.min.css" rel="stylesheet" />

<div class="container bg-white m-t-10 m-b-10 p-10">
    <ol class="breadcrumb no-margin">
        <li class="breadcrumb-item"><a href="@Url.Action("Media", "Admin")">Admin</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Images", "UserFiles")">Image Gallery</a></li>
        <li class="breadcrumb-item active">Edit</li>
    </ol>
</div>
<div class="container bg-white m-b-10">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal p-20">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="m-b-10">
                        @if (!String.IsNullOrEmpty(Model.ImageUrl))
                        {
                            var newsImage = $"/Experiment/Img?imageUrl={Model.ImageUrl}";
                            <img src="@newsImage&width=240&height=180&mode=crop" height="180" width="240" style="max-width:240px;" class="img-responsive lazy" />
                        }
                        else
                        {
                            <img src="~/Content/transparent.png" data-src="~/images/newstheme.jpg?width=240&height=180&mode=crop" style="max-width:240px;" class="img-responsive lazy" />
                        }
                    </div>
                    @Html.HiddenFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    <input type="file" class="form-control" id="ImageUrlUpdate" name="ImageUrlUpdate" />
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageCopyright, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImageCopyright, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageCopyright, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control input-tags" } })
                    @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.Sector)
            @Html.HiddenFor(model => model.FileMimeType)
            @Html.HiddenFor(model => model.FileSize)
            @Html.HiddenFor(model => model.UseCount)
            @Html.HiddenFor(model => model.CreatedOn)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" style="padding:8px 30px; font-size:16px;" />
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    <script src="~/Scripts/jquery.multiselect.js"></script>
    <script src="~/Scripts/tagsInput/js/jquery-tagsinput1.3.6jquery.tagsinput.min.js"></script>
    <script>
        $('.lazy').lazy();
        $('.input-tags').tagsInput();
    </script>
}