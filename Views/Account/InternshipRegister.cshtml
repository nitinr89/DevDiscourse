@model Devdiscourse.Models.InternshipRegisterViewModel
@{
    ViewBag.Title = "Register for Online Media Internship Program | Devdiscourse";
    string domainUrl = "http://www.devdiscourse.com";
    string imageUrl = "/AdminFiles/Logo/devediscourse_banner.png";
    ViewBag.PageDescription = "Development News, Sustainable Development, Energy, Economy, Finance, Transport, Education, Digital Development,Industry, Agro-Forestry, Social Protection,Public Administration, Water and Sanitation, Health News";
    ViewBag.PageImage = string.Concat(domainUrl, imageUrl);
    ViewBag.webEdition = ViewBag.edition;
    ViewBag.PostUrl = "http://www.devdiscourse.com/Account/InternshipRegister";
    ViewBag.pageKeywords = "Register, Online Media Internship Program, Global development news";
}
<link href="~/Content/jquery.multiselect.min.css" rel="stylesheet" />
<style>
    .renderBody {
        margin-top: -20px;
    }

    .card .form-control {
        border: 1px solid #f0f0f0;
        border-radius: 0;
        -webkit-box-shadow: none;
        box-shadow: none;
        margin-top: 10px;
    }

    div.findInList input {
        background-image: none;
    }

        div.checklistContainer, div.checklist, div.findInList input.blurred {
            border: 1px solid #f0f0f0;
            background-color: #fff;
        }

            div.checklist li.even:hover, div.checklist li.odd:hover, div.checklist li.focused, div.checklist li:hover label {
                background-color: #ff6a00;
                color: #fff;
            }

            div.checklist li.checked, div.checklist li.checked:hover, div.checklist li.checked:hover label {
                background: #ff6a00;
                color: #fff;
            }

    #CaptchaInputText {
        display: block;
        width: 100%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #f0f3f5;
        background-image: none;
        border: 1px solid #f0f0f0;
        border-radius: 0;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    }

    .validation-summary-errors ul {
        list-style: none;
        padding-left: 0;
        font-size: 12px;
    }

    .field-validation-error {
        color: #a94442;
    }

    .form-horizontal .form-group {
        margin-right: 0;
        margin-left: 0;
    }

    #Region_multi_findInList, #Region_multi_checklist, #Sector_multi_findInList, #Sector_multi_checklist {
        width: 100% !important;
    }
</style>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<img src="~/images/other/internship_register_banner.jpg" class="center-block img-responsive" />
<div class="card m-t-20">
    <div class="container">
        <div class="row m-t-30">
            <div class="col-md-6">
                @*<h5 class="text-muted text-uppercase text-center m-t-20 m-b-20 f-16">CREATE A NEW ACCOUNT</h5>*@
                @using (Html.BeginForm("InternshipRegister", "Account", FormMethod.Post, new { @class = "form-horizontal m-t-30", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                        <div class="">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control inputBox" })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                        <div class="">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control inputBox" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Nationality, new { @class = "control-label" })
                        <div class="">
                            <select class="form-control" name="Nationality" id="Nationality"></select>
                            @*@Html.TextBoxFor(m => m.Nationality, new { @class = "form-control inputBox" })*@
                            @Html.ValidationMessageFor(m => m.Nationality, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                        <div class="">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control inputBox" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                                <div class="">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control inputBox" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                                <div class="">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control inputBox" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Editions, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            <div id="RegionList" class="showListDiv"></div>
                            <input type="text" class="form-control hidden" id="Region" name="Editions" />
                            @Html.DropDownList("Editions", null, htmlAttributes: new { @class = "form-control", id = "Region_multi", @multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.Editions, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sectors, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            <div id="SectorList" class="showListDiv"></div>
                            <input type="text" class="form-control hidden" value="0" id="Sector" name="Sectors" />
                            @Html.DropDownList("Sectors", null, htmlAttributes: new { @class = "form-control", id = "Sector_multi", @multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.Sectors, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.CVUrl, new { @class = "control-label" })
                        <div class="">
                            @Html.TextBoxFor(m => m.CVUrl, new { @class = "form-control inputBox", @type = "file", accept = "application/pdf" })
                            @Html.ValidationMessageFor(m => m.CVUrl, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12 no-padding">
                        @*     @Html.Captcha("Try another", "Enter the text you see above:", 5, "The Captcha field is required", true) *@
                   
                        </div>
                    </div>
                    <div class="form-group">
                        <div>
                            <input type="submit" class="btn btn-block btn-primary" value="Sign Up" />
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-5">
                <img src="~/images/other/teacher_with_student_vector.png" class="img-responsive" style="width:300px;margin-top:20%" />
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/Scripts/jquery.multiselect.min.js"></script>
    <script>
        $(document).ready(function () {
            $(document).find('#regDropDown').change(function () {
                var date = new Date();
                date.setTime(date.getTime() + (24 * 60 * 60 * 1000));
                document.cookie = "Edition=" + $(this).val() + "; expires=" + date.toGMTString() + "; path=/";
                window.location.href = $(this).find('option:selected').attr('data-to');
            });
            getCountries();
            function getCountries() {
                $.ajax({
                    url: '/Home/GetCountry',
                    type: 'Post',
                    data: { region: "Global Edition" },
                    dataType: 'Json',
                    success: function (data) {
                        var NationalityHtml = '<option value="">--Select Country--</option>';
                        $.each(data, function (i, item) {
                            NationalityHtml += '<option value="' + item.Title + '">' + item.Title + '</option>';
                        });
                        $("#Nationality").html(NationalityHtml);
                    },
                    error: function () {
                    },
                });
                $('#Sector_multi').multiselect();
                $('#Region_multi').multiselect();
                // For Sector
                $('input[name="Sector_multi[]"]').on("change", function () {
                    var textArray = [];
                    $("input[name='Sector_multi[]']:checked").each(function () {
                        textArray.push($('label[for="' + this.id + '"]').text());
                    });
                    $("#Sector").val(textArray);
                    $("#SectorList").html(textArray.join(", "));
                });
                $('input[name="Region_multi[]"]').on("change", function () {
                    var valueArray = [];
                    $("input[name='Region_multi[]']:checked").each(function () {
                        valueArray.push($('label[for="' + this.id + '"]').text());
                    });
                    $("#Region").val(valueArray);
                    $("#RegionList").html(valueArray.join(", "));
                });
            }
        });
    </script>
}
