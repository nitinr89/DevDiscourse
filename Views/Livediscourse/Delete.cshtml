@model Devdiscourse.Models.BasicModels.Livediscourse

@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/_Layout _plain.cshtml";
}
<style>
    body {
        background-color: #efefef;
    }
</style>
<div class="container bg-white m-t-10 m-b-10 p-b-10 p-t-10">
    <ol class="breadcrumb no-margin">
        <li class="breadcrumb-item"><a href="@Url.Action("Media", "Admin")">Admin</a></li>
        @if (Model.ParentId == 0)
        {
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Livediscourse")">Livediscourse</a></li>
        }
        else
        {
            <li class="breadcrumb-item"><a href="@Url.Action("Details", "Livediscourse", new { id = Model.Id })">Livediscourse</a></li>
        }
        <li class="breadcrumb-item active">Delete</li>
    </ol>
</div>
<div class="container bg-white p-20">
    <h3>Are you sure you want to delete this?</h3>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.Raw(Model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Sector)
        </dt>

        <dd>
            @await Component.InvokeAsync("Sector", new { sector = Model.Sector, filter = "Plane" });
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageUrl)
        </dt>

        <dd>
            <img src="@Model.ImageUrl" class="img-responsive m-b-10" title="@Model.Title" alt="@Model.Title" />
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageCopyright)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImageCopyright)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageCaption)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImageCaption)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Tags)
        </dt>

        <dd>
            @if (!string.IsNullOrEmpty(Model.Tags))
            {
               var tag = Model.Tags.Split(','); foreach (var t in tag.OrderBy(x => Guid.NewGuid()).Take(20))
                    {
                        if (!string.IsNullOrEmpty(t.Trim()))
                        { <a href="/news?tag=@t.Trim()" class="badge tag">@t.Trim()</a> }
                    } 
              }
            </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AdminCheck)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AdminCheck)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Region)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Region)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Country)
        </dt>

        <dd>
            @{var country = Model.Country.Split(','); foreach (var c in country)
                {
                    if (!string.IsNullOrEmpty(c.Trim()))
                    { <span class="badge tag">@c.Trim()</span> }
            } }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ViewCount)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ViewCount)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LikeCount)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LikeCount)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedOn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ModifiedOn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ModifiedOn)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Close_Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Close_Date)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-danger" />
        </div>
    }
</div>
