@using Devdiscourse.Models;
@using X.PagedList
@model IPagedList<Devdiscourse.Models.ContributorModels.ViewContent>
@using X.PagedList.Mvc.Core
@{
    IPagedList<Devdiscourse.Models.ContributorModels.ViewContent> model = Model;
}
@{
    ViewBag.Title = "Rejected-Press-Release";
    Layout = "~/Views/Shared/_Layout _plain.cshtml";
}
<link href="~/Content/PagedList.css" rel="stylesheet" />
@functions {
    async Task Truncate(string input, int length)
    {
        if (string.IsNullOrEmpty(input))
        {
            <text> </text>
        }
        else if (input.Length <= length)
        {
            @input
        }
        else
        {
            @input.Substring(0, length)
            <text>..</text>
        }
    }
}
<style>
    body {
        background-color: #efefef;
    }

    .shadow {
        box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16);
    }

    .dropdown-menu li a {
        padding: 4px 10px;
    }

    @@media(max-width:425px) {
        .content-title {
            padding-top: 10px;
        }

        .content-date {
            padding-bottom: 10px;
        }
    }
</style>
<div class="container bg-white m-t-10 m-b-10 p-b-10 p-t-10">
    <ol class="breadcrumb no-margin">
        <li class="breadcrumb-item"><a href="@Url.Action("Media", "Admin")">Admin</a></li>
        <li class="breadcrumb-item active"><a href="@Url.Action("RejectContent", "NewsWire")">Rejected Content</a></li>
    </ol>
</div>
<div class="container no-padding m-b-10">
    @foreach (var item in Model)
    {
        <div class="shadow bg-white m-b-10">
            <div class="row" style="padding:10px 10px 0px 10px;">
                <div class="col-sm-3 col-md-2">
                    @if (item.IsVideo == true)
                    {
                        <img src="~/images/contibutor/video.svg" style="width:18px;" />
                    }
                    else
                    {
                        <img src="~/images/contibutor/article.svg" style="width:18px;" />
                    }
                    <span class="text-primary" style="margin-left:10px;">@item.Creator</span>
                </div>
                <div class="col-sm-7 col-md-8 content-title">
                    @if (item.Title.Length <= 70)
                    {
                        <p>
                            @item.Title
                            <span class="text-muted" style="margin-left:15px;">
                                @if (!String.IsNullOrEmpty(item.Description))
                                {
                                    var descrpt = item.Description.Replace("<p>", "");
                                    @Truncate(@descrpt.ToString(), 60)
                                }
                            </span>
                        </p>
                    }
                    else
                    {
                        <p>@item.Title</p>
                    }
                </div>
                <div class="col-sm-2 col-md-2 text-right content-date">
                    @if (item.CreatedOn.ToString("dd-MM-yyyy") == DateTime.UtcNow.ToString("dd-MM-yyyy"))
                    {
                        @item.CreatedOn.ToString("hh:mm")
                    }
                    else
                    {
                        @item.CreatedOn.ToString("dd-MM-yyyy")
                    }
                </div>
            </div>
        </div>
    }
    @if (Model.Any())
    {
        <div class="panel-footer" style="padding-top: 20px; background-color: transparent; border-top: none;">
            <small>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</small>
            @Html.PagedListPager(Model, page => Url.Action("RejectContent", "NewsWire", new { page, fl = ViewBag.filter }))
        </div>
    }
</div>
